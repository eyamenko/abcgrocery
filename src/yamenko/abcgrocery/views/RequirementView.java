package yamenko.abcgrocery.views;

import java.awt.Dimension;
import java.sql.Date;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import org.jdesktop.beansbinding.AutoBinding;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.Binding;
import org.jdesktop.beansbinding.BindingGroup;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.JListBinding;
import org.jdesktop.swingbinding.JTableBinding;
import org.jdesktop.swingbinding.SwingBindings;
import yamenko.abcgrocery.entities.Product;
import yamenko.abcgrocery.entities.PurchaseOrder;
import yamenko.abcgrocery.entities.Requirement;
import yamenko.abcgrocery.views.components.RequirementViewComponents;

/**
 *
 * @author Eugene Yamenko <yamenko@me.com>
 */
public class RequirementView extends javax.swing.JPanel implements View<RequirementViewComponents> {
    @Override
    public Object getComponent(RequirementViewComponents component) {
        switch (component) {
            case NewRequirementButton:
                return newRequirementButton;
            case Products:
                return products;
            case ProductsComboBox:
                return productsComboBox;
            case PurchaseOrders:
                return purchaseOrders;
            case QuotationsButton:
                return quotationsButton;
            case Requirement:
                return requirement;
            case Requirements:
                return requirements;
            case RequirementsTable:
                return requirementsTable;
            case QuantityField:
                return bindingGroup.getBinding("quantityField");
            default:
                return null;
        }
    }
    private ObservableList<Requirement> requirements = ObservableCollections.observableList(
            new ArrayList<Requirement>());
    private ObservableList<Product> products = ObservableCollections.observableList(
            new ArrayList<Product>());
    private ObservableList<PurchaseOrder> purchaseOrders = ObservableCollections.observableList(
            new ArrayList<PurchaseOrder>());
    private Requirement requirement = new Requirement();

    public List<Requirement> getRequirements() {
        return requirements;
    }

    public List<Product> getProducts() {
        return products;
    }

    public List<PurchaseOrder> getPurchaseOrders() {
        return purchaseOrders;
    }

    public Requirement getRequirement() {
        return requirement;
    }

    /**
     * Creates new form RequirementView
     */
    public RequirementView() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new BindingGroup();

        newRequirementLabel = new JLabel();
        productsComboBox = new JComboBox();
        quantityField = new JTextField();
        newRequirementButton = new JButton();
        jScrollPane1 = new JScrollPane();
        requirementsTable = new JTable();
        requirementsListLabel = new JLabel();
        jSeparator1 = new JSeparator();
        quotationsButton = new JButton();
        jScrollPane2 = new JScrollPane();
        purchaseOrdersList = new JList();
        purchaseOrdersLabel = new JLabel();

        setPreferredSize(new Dimension(700, 450));

        newRequirementLabel.setText("Create a new requirement");
        newRequirementLabel.setName("newRequirementLabel"); // NOI18N

        productsComboBox.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        productsComboBox.setName("productsComboBox"); // NOI18N

        ELProperty eLProperty = ELProperty.create("${products}");
        JComboBoxBinding jComboBoxBinding = SwingBindings.createJComboBoxBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, productsComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        quantityField.setToolTipText("Quantity");
        quantityField.setName("quantityField"); // NOI18N

        Binding binding = Bindings.createAutoBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, ELProperty.create("${requirement.quantity}"), quantityField, BeanProperty.create("text"), "quantityField");
        bindingGroup.addBinding(binding);

        newRequirementButton.setText("Create");
        newRequirementButton.setEnabled(false);
        newRequirementButton.setName("newRequirementButton"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        requirementsTable.setName("requirementsTable"); // NOI18N
        requirementsTable.getTableHeader().setReorderingAllowed(false);

        eLProperty = ELProperty.create("${requirements}");
        JTableBinding jTableBinding = SwingBindings.createJTableBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, requirementsTable);
        JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${id}"));
        columnBinding.setColumnName("Id");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${product}"));
        columnBinding.setColumnName("Product");
        columnBinding.setColumnClass(Product.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${date}"));
        columnBinding.setColumnName("Date");
        columnBinding.setColumnClass(Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(ELProperty.create("${quantity}"));
        columnBinding.setColumnName("Quantity");
        columnBinding.setColumnClass(Integer.class);
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(requirementsTable);
        if (requirementsTable.getColumnModel().getColumnCount() > 0) {
            requirementsTable.getColumnModel().getColumn(0).setResizable(false);
            requirementsTable.getColumnModel().getColumn(1).setResizable(false);
            requirementsTable.getColumnModel().getColumn(2).setResizable(false);
            requirementsTable.getColumnModel().getColumn(3).setResizable(false);
        }

        requirementsListLabel.setText("List of the requirements");
        requirementsListLabel.setName("requirementsListLabel"); // NOI18N

        jSeparator1.setName("jSeparator1"); // NOI18N

        quotationsButton.setText("Quotations");
        quotationsButton.setEnabled(false);
        quotationsButton.setName("quotationsButton"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        purchaseOrdersList.setName("purchaseOrdersList"); // NOI18N

        eLProperty = ELProperty.create("${purchaseOrders}");
        JListBinding jListBinding = SwingBindings.createJListBinding(AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, purchaseOrdersList);
        jListBinding.setDetailBinding(ELProperty.create("$${total} ${id}: ${date}"));
        bindingGroup.addBinding(jListBinding);

        jScrollPane2.setViewportView(purchaseOrdersList);

        purchaseOrdersLabel.setText("Purchase orders");
        purchaseOrdersLabel.setName("purchaseOrdersLabel"); // NOI18N

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                    .addComponent(newRequirementLabel)
                    .addComponent(newRequirementButton)
                    .addComponent(purchaseOrdersLabel)
                    .addComponent(quantityField)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(productsComboBox, 0, 200, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(requirementsListLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(quotationsButton, GroupLayout.PREFERRED_SIZE, 200, GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(quotationsButton)
                    .addComponent(requirementsListLabel)
                    .addComponent(newRequirementLabel))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(productsComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantityField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newRequirementButton)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, 10, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(purchaseOrdersLabel)
                        .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addComponent(jScrollPane1, GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE))
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public JScrollPane jScrollPane1;
    public JScrollPane jScrollPane2;
    public JSeparator jSeparator1;
    public JButton newRequirementButton;
    public JLabel newRequirementLabel;
    public JComboBox productsComboBox;
    public JLabel purchaseOrdersLabel;
    public JList purchaseOrdersList;
    public JTextField quantityField;
    public JButton quotationsButton;
    public JLabel requirementsListLabel;
    public JTable requirementsTable;
    private BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
